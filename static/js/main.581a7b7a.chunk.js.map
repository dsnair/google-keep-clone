{"version":3,"sources":["App.js","index.js"],"names":["App","_useState","useState","_useState2","Object","slicedToArray","task","setTask","handleUpdateTask","e","target","value","_useState3","_useState4","tasks","setTasks","handleAddTask","preventDefault","concat","toConsumableArray","isComplete","react_default","a","createElement","className","map","item","index","onSubmit","key","type","checked","onChange","newTasks","splice","handleCompleteTask","style","textDecoration","onClick","handleDeleteTask","placeholder","ReactDOM","render","src_App","document","getElementById"],"mappings":"4OAiEeA,MA9Df,WAAe,IAAAC,EACWC,mBAAS,IADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACNK,EADMH,EAAA,GACAI,EADAJ,EAAA,GAEPK,EAAmB,SAAAC,GAAC,OAAIF,EAAQE,EAAEC,OAAOC,QAFlCC,EAIaV,mBAAS,IAJtBW,EAAAT,OAAAC,EAAA,EAAAD,CAAAQ,EAAA,GAINE,EAJMD,EAAA,GAICE,EAJDF,EAAA,GAKPG,EAAgB,SAAAP,GACpBA,EAAEQ,iBACGX,IACLS,EAAQ,GAAAG,OAAAd,OAAAe,EAAA,EAAAf,CAAKU,GAAL,CAAY,CAAER,OAAMc,YAAY,MACxCb,EAAQ,MAuBV,OACEc,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZV,EAAMW,IAAI,SAACC,EAAMC,GAAP,OACTN,EAAAC,EAAAC,cAAA,QAAMK,SAAUZ,EAAea,IAAKF,GAClCN,EAAAC,EAAAC,cAAA,SACEO,KAAK,WACLC,QAASL,EAAKN,WACdY,SAAU,kBA3BO,SAAAL,GACzB,IAAMM,EAAQ7B,OAAAe,EAAA,EAAAf,CAAOU,GAMrBmB,EAASC,OAAOP,EAAO,EAAG,CACxBrB,KAAMQ,EAAMa,GAAOrB,KACnBc,YAAaN,EAAMa,GAAOP,aAE5BL,EAASkB,GAgBeE,CAAmBR,MAErCN,EAAAC,EAAAC,cAAA,SACEO,KAAK,OACLnB,MAAOe,EAAKpB,KACZ0B,SAAUxB,EACV4B,MAAO,CAAEC,eAAgBX,EAAKN,YAAc,kBAE9CC,EAAAC,EAAAC,cAAA,UAAQe,QAAS,kBArBA,SAAAX,GACvB,IAAMM,EAAQ7B,OAAAe,EAAA,EAAAf,CAAOU,GACrBmB,EAASC,OAAOP,EAAO,GACvBZ,EAASkB,GAkBoBM,CAAiBZ,KAAxC,QAGJN,EAAAC,EAAAC,cAAA,QAAMK,SAAUZ,GACdK,EAAAC,EAAAC,cAAA,SACEO,KAAK,OACLnB,MAAOL,EACPkC,YAAY,WACZR,SAAUxB,OCrDpBiC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.581a7b7a.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport './App.css'\n\nfunction App() {\n  const [task, setTask] = useState('')\n  const handleUpdateTask = e => setTask(e.target.value)\n\n  const [tasks, setTasks] = useState([])\n  const handleAddTask = e => {\n    e.preventDefault()\n    if (!task) return // don't add empty task to array\n    setTasks([...tasks, { task, isComplete: false }])\n    setTask('')\n  }\n\n  const handleCompleteTask = index => {\n    const newTasks = [...tasks]\n    // newTasks.splice(index, 1)\n    // newTasks.push({\n    //   task: tasks[index].task,\n    //   isComplete: !tasks[index].isComplete\n    // })\n    newTasks.splice(index, 1, {\n      task: tasks[index].task,\n      isComplete: !tasks[index].isComplete\n    })\n    setTasks(newTasks)\n  }\n\n  const handleDeleteTask = index => {\n    const newTasks = [...tasks]\n    newTasks.splice(index, 1)\n    setTasks(newTasks)\n  }\n\n  return (\n    <div className=\"App\">\n      {tasks.map((item, index) => (\n        <form onSubmit={handleAddTask} key={index}>\n          <input\n            type=\"checkbox\"\n            checked={item.isComplete}\n            onChange={() => handleCompleteTask(index)}\n          />\n          <input\n            type=\"text\"\n            value={item.task}\n            onChange={handleUpdateTask}\n            style={{ textDecoration: item.isComplete && 'line-through' }}\n          />\n          <button onClick={() => handleDeleteTask(index)}>x</button>\n        </form>\n      ))}\n      <form onSubmit={handleAddTask}>\n        <input\n          type=\"text\"\n          value={task}\n          placeholder=\"Add task\"\n          onChange={handleUpdateTask}\n        />\n      </form>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}